import asyncio
import os
from datetime import datetime
import pytz
from telethon import TelegramClient
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ —Å–µ–∫—Ä–µ—Ç–æ–≤
API_ID = os.getenv('API_ID', '2040')
API_HASH = os.getenv('API_HASH', 'b18441a1ff607e10a989891a5462e627')
BOT_TOKEN = os.getenv('BOT_TOKEN')
USER_CHAT_ID = int(os.getenv('USER_CHAT_ID', '0'))

# –°–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–∏)
CHANNELS = [
    'gubernator_46',
    'kursk_info46',
    'Alekhin_Telega',
    'rian_ru',
    'kursk_ak46',
    'zhest_kursk_146',
    'novosti_efir',
    'kursk_tipich',
    'seymkursk',
    'kursk_smi',
    'kursk_russia',
    'belgorod01',
    'kurskadm',
    'Avtokadr46',
    'kurskbomond',
    'prigranichie_radar1',
    'grohot_pgr',
    'kursk_nasv',
    'mchs_46',
    'patriot046',
    'kursk_now',
    'Hinshtein',
    'incidentkursk',
    'zhest_belgorod',
    'Pogoda_Kursk',
    'pb_032',
    'tipicl32',
    'bryansk_smi',

]

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(message)s')
logger = logging.getLogger(__name__)

async def main():
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞")
    
    client = TelegramClient('github_bot', API_ID, API_HASH)
    
    try:
        await client.start(bot_token=BOT_TOKEN)
        logger.info("‚úÖ –ë–æ—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await client.send_message(
            USER_CHAT_ID,
            f"ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!\nüïí –í—Ä–µ–º—è: {datetime.now(pytz.timezone('Europe/Moscow')).strftime('%H:%M %d.%m.%Y')}\n‚úÖ –ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!"
        )
        
        logger.info("‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        
        try:
            # –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            await client.send_message(USER_CHAT_ID, f"‚ùå –û—à–∏–±–∫–∞ –≤ –±–æ—Ç–µ: {str(e)[:100]}...")
        except:
            pass
            
    finally:
        await client.disconnect()

if __name__ == '__main__':
    asyncio.run(main())
